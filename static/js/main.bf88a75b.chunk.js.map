{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css"],"names":["module","exports","AlternativeMessage","Message","props","className","s","main","ava","src","avatar","field","beak","item","name","message","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","changeActive","length","input","charCode","disabled","GreetingContainer","users","addUserCallback","setName","setError","match","alert","HW3","setUsers","newUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Junior","JuniorPlus","Error404","PATH","Routes","path","exact","render","to","Header","header","activeClassName","active","square","HW5","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bf88a75b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1q6xc\",\"errorInput\":\"SuperInputText_errorInput__38QKI\",\"error\":\"SuperInputText_error__ikd4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__dJ5og\",\"red\":\"SuperButton_red__26Hs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__37WTP\",\"column\":\"HW4_column__3DPif\",\"testSpanError\":\"HW4_testSpanError__1OdsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3Ls9a\",\"spanClassName\":\"SuperCheckbox_spanClassName__2co0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notError\":\"Greeting_notError__1OLhk\",\"error\":\"Greeting_error__2dhQs\",\"errorField\":\"Greeting_errorField__3SiKT\",\"input\":\"Greeting_input__2-ibU\"};","import React from 'react'\n\nfunction AlternativeMessage() {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default AlternativeMessage\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessageType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={s.main}>\n            <div className={s.ava}>\n                <img src={props.avatar}/>\n            </div>\n            <div className={s.field}>\n                <div className={s.beak}>\n                </div>\n            </div>\n            <div className={s.item}>\n                <div className={s.name}>{props.name}</div>\n                {props.message}\n                <span className={s.time}>{props.time}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport AlternativeMessage from \"./AlternativeMessage\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://www.blast.hk/data/avatars/o/416/416604.jpg?1601372111',\n    name: 'Tommy Angelo',\n    message: 'I think it\\'s important to keep a balance in things. Yeah, balance, that\\'s the right word. Cause the guy who wants too much risks losing absolutely everything. Of course, the one who wants too little from life might not get anything at all.',\n    time: '16:34',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessage/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\n\n    return (\n        <div>\n            <span>{props.affair.name} </span>\n            <span>{props.affair.priority}</span>\n            <SuperButton red onClick={deleteCallback}>X</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter(\"all\") // need to fix\n    const setHigh = () => props.setFilter(\"high\")\n    const setMiddle = () => props.setFilter(\"middle\")\n    const setLow = () => props.setFilter(\"low\")\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else if (filter === 'high') return affairs.filter(t => t.priority === 'high')\n    else if (filter === 'middle') return affairs.filter(t => t.priority === 'middle')// need to fix\n    else return affairs.filter(t => t.priority === 'low')// need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(t => t._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <br/>\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\nimport s from './Greeting.module.css'\nimport {ErrorType} from \"./GreetingContainer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (value: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: ErrorType // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) {\n            addUser();\n        }\n    }\n    /*const inputClass = error.length !== 0 ? s.error : s.notError*/// need to fix with (?:)\n    const changeActive = error.length > 0;\n\n    return (\n        <div className={s.input}>\n            <div>\n                <SuperInputText value={name}\n                                 onChange={setNameCallback}\n                                 error={error}\n                                 onKeyPress={onKeyPressHandler}/>\n            </div>\n            <div>\n                <SuperButton disabled={changeActive} onClick={addUser}>add</SuperButton>\n                <span>{totalUsers}</span>\n            </div>\n            {/*<br/>*/}\n            {/*<div className={s.errorField}>{error}</div>*/}\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\nexport type ErrorType = '' | 'Enter your name!'\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<ErrorType>('Enter your name!') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        if (e.currentTarget.value.match(/[ #&?0123456789]/ig) !== null || e.currentTarget.value.length === 0) {\n            setError('Enter your name!');\n            setName(e.currentTarget.value);\n        } else {\n            setError(''); // need to fix\n            setName(e.currentTarget.value);\n        }\n    }\n    const addUser = () => {\n        if (error.length === 0) {\n            addUserCallback(name);\n            alert(`Hello ${name}!`);\n            setName('');\n            setError('Enter your name!');// need to fix\n        } else {\n            alert('Enter correct your name!');\n        }\n    }\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let newName = {\n            _id: v1(),\n            name: name\n        };\n        let newUsers = [newName, ...users];\n        setUsers(newUsers); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Junior() {\n    return (\n        <div>\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport PreJunior from './pages/PreJunior'\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                {/*add routes*/}\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <div className={s.item}>\n                <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.active}>pre-junior</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={PATH.JUNIOR} activeClassName={s.active}>junior</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.active}>junior+</NavLink>\n            </div>\n            <div className={s.square}>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header___h6Yh\",\"item\":\"Header_item__GHTlB\",\"active\":\"Header_active__19x1-\",\"square\":\"Header_square__2uyRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__1Snry\",\"ava\":\"Message_ava__13Kqi\",\"field\":\"Message_field__1yGsw\",\"beak\":\"Message_beak__32qHV\",\"name\":\"Message_name__2m4Ue\",\"item\":\"Message_item__1JRzH\",\"time\":\"Message_time__lApoz\"};"],"sourceRoot":""}